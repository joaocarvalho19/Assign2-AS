[2022-05-15 18:01:57,865] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 18:02:29,162] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,192] INFO [Controller id=4] 4 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,195] INFO [Controller id=4] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,223] INFO [Controller id=4] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 18:02:29,229] INFO [Controller id=4] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 18:02:29,236] INFO [Controller id=4] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 18:02:29,241] INFO [Controller id=4] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 18:02:29,262] INFO [Controller id=4] Initialized broker epochs cache: Map(4 -> 123) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,268] DEBUG [Controller id=4] Register BrokerModifications handler for Set(4) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,273] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,286] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,287] INFO [Controller id=4] Currently active brokers in the cluster: Set(4) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,287] INFO [Controller id=4] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 18:02:29,287] INFO [Controller id=4] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 18:02:29,288] INFO [Controller id=4] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 18:02:29,290] INFO [Controller id=4] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,290] INFO [Controller id=4] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,291] INFO [Controller id=4] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 18:02:29,291] INFO [Topic Deletion Manager 4] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 18:02:29,292] INFO [Controller id=4] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 18:02:29,305] INFO [ReplicaStateMachine controllerId=4] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:02:29,305] INFO [ReplicaStateMachine controllerId=4] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:02:29,314] INFO [ReplicaStateMachine controllerId=4] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:02:29,315] DEBUG [ReplicaStateMachine controllerId=4] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:02:29,315] INFO [PartitionStateMachine controllerId=4] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:02:29,316] INFO [PartitionStateMachine controllerId=4] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:02:29,317] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,320] DEBUG [PartitionStateMachine controllerId=4] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:02:29,321] INFO [Controller id=4] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,322] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,326] INFO [Controller id=4] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,326] INFO [Controller id=4] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,326] INFO [Controller id=4] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,326] INFO [Controller id=4] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 18:02:29,326] INFO [Controller id=4] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 18:02:29,343] DEBUG [Controller id=3] Broker 4 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:02:29,361] INFO [Controller id=4] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 18:02:29,386] INFO [Controller id=4] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 3,4 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,387] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,392] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,394] INFO [Controller id=4] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,396] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,401] DEBUG [Controller id=4] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,401] INFO [Controller id=4] Updated broker epochs cache: Map(4 -> 123, 3 -> 127) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,412] INFO [Controller id=4] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,3,4 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,412] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,421] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,421] INFO [Controller id=4] New broker startup callback for 0 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,424] DEBUG [Controller id=4] Register BrokerModifications handler for Vector(0) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,425] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,426] INFO [Controller id=4] Updated broker epochs cache: Map(4 -> 123, 3 -> 127, 0 -> 129) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,490] INFO [Controller id=4] Newly added brokers: 2,5, deleted brokers: , bounced brokers: , all live brokers: 0,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,490] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,493] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,493] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,503] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,503] INFO [Controller id=4] New broker startup callback for 2,5 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,503] DEBUG [Controller id=4] Register BrokerModifications handler for Vector(2, 5) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,508] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,508] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,508] INFO [Controller id=4] Updated broker epochs cache: Map(2 -> 130, 5 -> 131, 4 -> 123, 3 -> 127, 0 -> 129) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,515] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,535] DEBUG [Controller id=0] Broker 4 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:02:29,582] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,593] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,611] DEBUG [Controller id=2] Broker 4 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:02:29,621] DEBUG [Controller id=5] Broker 4 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:02:29,729] INFO [Controller id=4] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,729] DEBUG [Channel manager on controller 4]: Controller 4 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:02:29,729] INFO [Controller id=4] New broker startup callback for 1 (kafka.controller.KafkaController)
[2022-05-15 18:02:29,737] INFO [RequestSendThread controllerId=4] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,742] DEBUG [Controller id=4] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,748] INFO [RequestSendThread controllerId=4] Controller 4 connected to LAPTOP-S01N1QNU:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:02:29,751] INFO [Controller id=4] Updated broker epochs cache: Map(2 -> 130, 5 -> 131, 4 -> 123, 1 -> 132, 3 -> 127, 0 -> 129) (kafka.controller.KafkaController)
[2022-05-15 18:02:29,870] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:02:29,980] DEBUG [Controller id=1] Broker 4 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:02:30,266] INFO [Controller id=4] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(Wchq4ZOJRIK4ViqZBdmcfw),Map(Sensor-1 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=3,0,5, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=5,1,4, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0,5,1, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=2,3,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 18:02:30,268] INFO [Controller id=4] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,370] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:02:34,370] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:02:34,372] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:02:34,373] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:03:39,209] INFO [Controller id=4] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(NiBSmPEiTpmamzFrDKM1Eg),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 18:03:39,209] INFO [Controller id=4] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,379] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:07:34,379] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:07:34,380] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,381] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:12:34,382] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:12:34,383] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,388] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:17:34,388] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:17:34,390] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,402] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:22:34,402] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:22:34,403] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,412] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:27:34,412] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:27:34,413] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:27:34,414] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,429] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:32:34,429] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:32:34,430] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,440] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:37:34,440] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:37:34,441] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,456] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:42:34,456] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:42:34,457] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,465] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:47:34,465] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:47:34,466] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,468] INFO [Controller id=4] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:52:34,468] TRACE [Controller id=4] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] DEBUG [Controller id=4] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:52:34,469] TRACE [Controller id=4] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:18,065] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 18:53:36,248] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,274] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,310] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 18:53:36,321] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 18:53:36,372] DEBUG [Controller id=5] Broker 0 was elected as controller instead of broker 5 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-15 18:53:36,389] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,403] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 18:53:36,414] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 18:53:36,413] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,420] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 18:53:36,422] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:53:36,425] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 18:53:36,443] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:53:36,444] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,470] INFO [Controller id=0] Initialized broker epochs cache: Map(2 -> 109, 5 -> 106, 4 -> 107, 1 -> 108, 3 -> 114, 0 -> 105) (kafka.controller.KafkaController)
[2022-05-15 18:53:36,479] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:53:36,485] DEBUG [Controller id=0] Register BrokerModifications handler for Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-15 18:53:36,504] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 18:53:36,507] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,542] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 18:53:36,545] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,551] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,558] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,569] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,579] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-15 18:53:36,586] INFO [Controller id=0] Currently active brokers in the cluster: Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-15 18:53:36,587] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,589] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 18:53:36,590] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,589] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,589] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,589] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,589] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,590] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 18:53:36,591] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 18:53:36,598] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,599] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,600] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 18:53:36,601] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 18:53:36,602] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 18:53:36,688] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:53:36,696] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:53:36,706] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,706] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,711] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,711] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,709] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,709] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 18:53:36,741] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:53:36,741] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 18:53:36,742] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:53:36,745] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:53:36,754] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 18:53:36,755] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 18:53:36,804] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,806] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,807] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,809] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 18:53:36,815] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 18:53:36,920] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 18:53:37,364] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(3kHFpB0OSsqsaeYgMpILzw),Map(Sensor-1 -> ReplicaAssignment(replicas=3,1,4, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=1,3,0, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=2,5,1, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=0,4,2, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=5,2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 18:53:37,367] INFO [Controller id=0] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,930] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:53:41,930] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:53:41,933] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:53:41,934] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:53:56,022] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(K-DHeYjGRzmsMwB1YA4wBw),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 18:53:56,023] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,944] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 18:58:41,945] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 18:58:41,946] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,956] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:03:41,958] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:03:41,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:03:41,960] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,966] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:08:41,966] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,967] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,968] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,968] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:08:41,968] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:08:41,968] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,973] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:13:41,973] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:13:41,974] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,987] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:18:41,987] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:18:41,988] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:18:41,989] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,994] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:23:41,994] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,995] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:23:41,996] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:23:41,996] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,002] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:28:42,002] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:28:42,003] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,013] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:33:42,013] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:33:42,014] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,029] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:38:42,029] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:38:42,030] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:43:42,032] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:48:42,038] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:53:42,040] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,042] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 19:58:42,042] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 19:58:42,043] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,057] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:03:42,059] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:08:42,067] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:13:42,075] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,076] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:18:42,076] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:18:42,077] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:23:42,082] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,092] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:28:42,092] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:28:42,093] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,107] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,109] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,109] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:33:42,109] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:33:42,109] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,118] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:38:42,118] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:38:42,119] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:43:42,122] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:43:53,853] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 20:44:57,292] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 20:45:16,671] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:16,711] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 20:45:16,718] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 20:45:16,771] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:16,793] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 20:45:16,796] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:16,803] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 20:45:16,805] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 20:45:16,811] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 20:45:16,816] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 20:45:16,835] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 20:45:16,860] INFO [Controller id=0] Initialized broker epochs cache: Map(2 -> 116, 5 -> 117, 4 -> 121, 0 -> 115) (kafka.controller.KafkaController)
[2022-05-15 20:45:16,872] DEBUG [Controller id=0] Register BrokerModifications handler for Set(2, 5, 4, 0) (kafka.controller.KafkaController)
[2022-05-15 20:45:16,899] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:16,947] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:16,953] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:16,959] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:16,958] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:16,960] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:16,982] INFO [Controller id=0] Currently active brokers in the cluster: Set(2, 5, 4, 0) (kafka.controller.KafkaController)
[2022-05-15 20:45:16,983] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:45:16,984] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:45:16,985] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 20:45:16,997] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 20:45:17,008] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 20:45:17,006] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,010] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,011] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,010] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,009] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,012] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,013] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 20:45:17,014] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 20:45:17,014] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:45:17,015] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 20:45:17,056] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-15 20:45:17,145] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:45:17,147] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:45:17,163] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,177] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,184] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:45:17,187] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,190] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:45:17,191] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:45:17,205] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,206] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:45:17,217] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:45:17,218] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 20:45:17,250] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,254] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,255] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,256] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 20:45:17,270] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 20:45:17,348] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 20:45:17,460] INFO [Controller id=0] Newly added brokers: 1,3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4,5 (kafka.controller.KafkaController)
[2022-05-15 20:45:17,462] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:17,470] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:45:17,512] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,512] INFO [Controller id=0] New broker startup callback for 1,3 (kafka.controller.KafkaController)
[2022-05-15 20:45:17,546] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,627] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,630] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:45:17,714] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1, 3) (kafka.controller.KafkaController)
[2022-05-15 20:45:17,764] INFO [Controller id=0] Updated broker epochs cache: Map(2 -> 116, 5 -> 117, 4 -> 121, 1 -> 123, 3 -> 122, 0 -> 115) (kafka.controller.KafkaController)
[2022-05-15 20:45:17,904] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(DwG3cwJVQsyUp_tfkFJVdQ),Map(Sensor-1 -> ReplicaAssignment(replicas=5,1,2, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=2,0,5, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=0,4,1, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=3,5,4, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=1,3,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 20:45:17,907] INFO [Controller id=0] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,364] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:45:22,365] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:45:22,367] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-15 20:45:22,368] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:49:22,885] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 20:49:38,035] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:49:38,063] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 20:49:38,067] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 20:49:38,100] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 20:49:38,105] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 20:49:38,108] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 20:49:38,110] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 20:49:38,123] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-05-15 20:49:38,130] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-15 20:49:38,135] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:49:38,144] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:49:38,145] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-15 20:49:38,145] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:49:38,146] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:49:38,146] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 20:49:38,149] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,149] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,150] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 20:49:38,150] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 20:49:38,151] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 20:49:38,168] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:49:38,170] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:49:38,178] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:49:38,179] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:49:38,179] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:49:38,179] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:49:38,181] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:49:38,190] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:49:38,191] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 20:49:38,198] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,198] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,198] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,199] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 20:49:38,200] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 20:49:38,215] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 20:49:38,361] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(vwf8lYN1QhC8kDhSexyIWQ),Map(Sensor-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 20:49:38,362] INFO [Controller id=0] New partition creation callback for Sensor-0 (kafka.controller.KafkaController)
[2022-05-15 20:49:43,219] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:49:43,220] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:49:43,222] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:49:43,223] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:52:06,305] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 20:53:15,411] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 20:53:31,352] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 20:53:31,379] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 20:53:31,385] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 20:53:31,416] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 20:53:31,420] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 20:53:31,423] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 20:53:31,426] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 20:53:31,440] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-05-15 20:53:31,446] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-15 20:53:31,452] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 20:53:31,462] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 20:53:31,462] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-15 20:53:31,463] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:53:31,463] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 20:53:31,463] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 20:53:31,466] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,466] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,467] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 20:53:31,467] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 20:53:31,468] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 20:53:31,484] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:53:31,485] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:53:31,491] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:53:31,491] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 20:53:31,492] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:53:31,493] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:53:31,495] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 20:53:31,499] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 20:53:31,500] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 20:53:31,510] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,510] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,510] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,511] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 20:53:31,511] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 20:53:31,523] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 20:53:32,327] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(U6GUX9LvQLOmZWOQZkWiyg),Map(Sensor-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 20:53:32,336] INFO [Controller id=0] New partition creation callback for Sensor-0 (kafka.controller.KafkaController)
[2022-05-15 20:53:36,536] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:53:36,538] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:53:36,558] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:53:36,563] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 20:54:44,489] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(cYeZ0u8bRWe2Cz8wYN2YRg),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 20:54:44,490] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-15 20:58:36,571] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 20:58:36,571] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 20:58:36,573] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 20:58:36,573] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 21:03:36,577] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 21:03:36,595] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 21:03:36,604] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 21:03:36,604] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 21:08:36,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 21:08:36,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 21:08:36,614] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 21:08:36,614] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 21:27:25,452] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 21:29:30,330] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-15 21:29:45,994] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-15 21:29:46,019] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-15 21:29:46,023] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-15 21:29:46,053] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-15 21:29:46,057] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-15 21:29:46,060] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-15 21:29:46,062] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-15 21:29:46,074] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-05-15 21:29:46,082] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-15 21:29:46,088] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-15 21:29:46,096] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-15 21:29:46,096] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-15 21:29:46,097] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 21:29:46,097] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-15 21:29:46,097] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-15 21:29:46,100] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,101] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,101] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-15 21:29:46,102] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-15 21:29:46,102] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-15 21:29:46,118] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 21:29:46,119] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 21:29:46,129] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 21:29:46,129] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-15 21:29:46,131] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 21:29:46,132] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 21:29:46,133] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-15 21:29:46,136] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-15 21:29:46,136] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-15 21:29:46,142] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,143] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,143] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,143] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-15 21:29:46,144] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-15 21:29:46,157] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-15 21:29:46,306] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(DKROb1kzQr66QU6_Z0Btsw),Map(Sensor-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 21:29:46,308] INFO [Controller id=0] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-15 21:29:51,162] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 21:29:51,162] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 21:29:51,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 21:29:51,165] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-15 21:30:17,928] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(CPeQNkHVT-KRRBpJRNRK9A),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-15 21:30:17,928] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-15 21:34:51,179] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-15 21:34:51,179] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-15 21:34:51,180] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-15 21:34:51,180] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
