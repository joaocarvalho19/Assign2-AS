[2022-05-11 23:00:34,438] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:00:43,215] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:00:43,247] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:00:43,252] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:00:43,291] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:00:43,296] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:00:43,299] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:00:43,302] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:00:43,317] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-05-11 23:00:43,325] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:00:43,330] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:00:43,340] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:00:43,340] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:00:43,341] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:00:43,341] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:00:43,342] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:00:43,344] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,344] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,345] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:00:43,345] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:00:43,346] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:00:43,365] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:00:43,366] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:00:43,371] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:00:43,372] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:00:43,373] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:00:43,374] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:00:43,377] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:00:43,381] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:00:43,382] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:00:43,390] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,390] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,397] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,398] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:00:43,399] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:00:43,413] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:00:48,428] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:00:48,431] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:05:48,459] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:05:48,460] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:06:31,203] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:07:12,402] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:07:15,984] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:07:16,013] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:07:16,018] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:07:16,057] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:07:16,061] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:07:16,065] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:07:16,067] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:07:16,083] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 25) (kafka.controller.KafkaController)
[2022-05-11 23:07:16,089] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:07:16,097] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:07:16,105] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:07:16,105] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:07:16,106] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:07:16,106] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:07:16,106] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:07:16,110] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,110] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,111] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:07:16,111] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:07:16,113] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:07:16,128] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:07:16,129] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:07:16,134] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:07:16,134] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:07:16,135] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:07:16,137] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:07:16,138] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:07:16,141] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:07:16,141] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:07:16,152] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,153] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,153] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,153] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:07:16,155] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:07:16,169] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:07:21,185] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:07:21,187] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:07:26,621] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(p8ksly4sRAyMLUOxWwHPKQ),Map(Sensor-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-11 23:07:26,622] INFO [Controller id=0] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-11 23:11:33,699] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:11:37,917] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:11:37,949] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:11:37,954] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:11:37,991] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:11:37,995] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:11:37,998] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:11:38,001] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:11:38,014] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 93) (kafka.controller.KafkaController)
[2022-05-11 23:11:38,022] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:11:38,027] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:11:38,037] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:11:38,038] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:11:38,038] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:11:38,039] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:11:38,039] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:11:38,042] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,042] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,043] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:11:38,043] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:11:38,044] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:11:38,060] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:11:38,062] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:11:38,072] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:11:38,072] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:11:38,073] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:11:38,075] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:11:38,075] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:11:38,079] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:11:38,080] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:11:38,087] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,087] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,093] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,093] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:11:38,095] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:11:38,109] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:11:43,123] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:11:43,123] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:15:02,594] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:15:18,068] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:15:18,100] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:15:18,105] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:15:18,146] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:15:18,150] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:15:18,153] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:15:18,156] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:15:18,172] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 93) (kafka.controller.KafkaController)
[2022-05-11 23:15:18,181] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:15:18,186] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:15:18,197] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:15:18,197] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:15:18,198] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:15:18,198] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:15:18,198] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:15:18,202] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,202] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,203] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:15:18,203] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:15:18,204] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:15:18,222] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:15:18,224] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:15:18,231] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:15:18,232] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:15:18,233] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:15:18,234] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:15:18,236] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:15:18,240] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:15:18,240] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:15:18,253] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,253] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,253] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,254] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:15:18,255] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:15:18,270] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:15:23,278] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:15:23,280] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:18:06,559] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:18:22,745] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:18:22,790] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:18:22,798] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:18:22,860] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:18:22,866] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:18:22,872] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:18:22,877] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:18:22,898] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 93) (kafka.controller.KafkaController)
[2022-05-11 23:18:22,907] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:18:22,912] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:18:22,923] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:18:22,924] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-05-11 23:18:22,924] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:18:22,925] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:18:22,925] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:18:22,929] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,929] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,930] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:18:22,930] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:18:22,931] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:18:22,951] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:18:22,953] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:18:22,961] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:18:22,962] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:18:22,963] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:18:22,964] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:18:22,972] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:18:22,975] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:18:22,975] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:18:22,983] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,983] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,983] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,984] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:18:22,985] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:18:23,002] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:18:28,010] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:18:28,012] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:23:38,834] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-11 23:23:50,995] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,046] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,088] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-11 23:23:51,103] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-11 23:23:51,181] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-11 23:23:51,205] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,230] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-05-11 23:23:51,239] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-11 23:23:51,251] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-11 23:23:51,256] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-05-11 23:23:51,265] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-11 23:23:51,270] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,303] INFO [Controller id=0] Initialized broker epochs cache: Map(2 -> 120, 5 -> 123, 4 -> 122, 1 -> 116, 3 -> 117, 0 -> 115) (kafka.controller.KafkaController)
[2022-05-11 23:23:51,304] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-11 23:23:51,318] DEBUG [Controller id=0] Register BrokerModifications handler for Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-11 23:23:51,344] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,360] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,365] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,374] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,380] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,390] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-11 23:23:51,391] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,401] INFO [Controller id=0] Currently active brokers in the cluster: Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-11 23:23:51,402] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:23:51,403] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-11 23:23:51,419] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-11 23:23:51,425] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,426] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,427] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-11 23:23:51,424] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-11 23:23:51,428] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-11 23:23:51,431] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-11 23:23:51,459] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,483] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,488] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,486] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,487] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,491] DEBUG [Controller id=5] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-11 23:23:51,487] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,497] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-11 23:23:51,526] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:23:51,529] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:23:51,544] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,546] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,556] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,557] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,558] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,561] INFO [RequestSendThread controllerId=0] Controller 0 connected to LAPTOP-S01N1QNU.mshome.net:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-11 23:23:51,564] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:23:51,565] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-11 23:23:51,566] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:23:51,567] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:23:51,575] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-11 23:23:51,576] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-11 23:23:51,588] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,588] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,589] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,590] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-11 23:23:51,595] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-11 23:23:51,735] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-11 23:23:53,258] INFO [Controller id=0] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(bBnnovmEQf6JGyPXMSjSDA),Map(Sensor-1 -> ReplicaAssignment(replicas=2,3,0, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=5,1,4, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=4,2,3, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=1,4,2, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=3,0,5, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=0,5,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-11 23:23:53,259] INFO [Controller id=0] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,749] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:23:56,749] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:23:56,752] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:23:56,753] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:24:40,270] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(ooFtThRKRxmC5UEUMhkYRg),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-11 23:24:40,272] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,762] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:28:56,762] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:28:56,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,763] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,763] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,763] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:28:56,764] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,767] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:33:56,767] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:33:56,768] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,779] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:38:56,780] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:38:56,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,786] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,786] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,787] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:38:56,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:38:56,788] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,799] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:43:56,799] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:43:56,800] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,817] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:48:56,817] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:48:56,822] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,823] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,823] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,823] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,824] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,824] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:48:56,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:48:56,825] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,830] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:53:56,830] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:53:56,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,834] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,836] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,836] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,836] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,837] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,837] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:53:56,837] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:53:56,837] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,851] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-11 23:58:56,851] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-11 23:58:56,852] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,860] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:03:56,863] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,869] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:08:56,870] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:08:56,873] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,873] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,874] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,875] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:08:56,875] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:08:56,875] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,879] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:13:56,880] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:13:56,883] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,884] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,884] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,884] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,885] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:13:56,886] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:13:56,886] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,890] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:18:56,890] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:18:56,891] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,894] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:23:56,894] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:23:56,895] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,900] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:28:56,900] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:28:56,904] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,905] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,905] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:28:56,906] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,908] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:33:56,909] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:33:56,912] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,913] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,914] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,914] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:33:56,914] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:33:56,914] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,921] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:38:56,921] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:38:56,923] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,928] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:43:56,928] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:43:56,931] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,931] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,933] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:43:56,933] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:43:56,933] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,937] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:48:56,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:48:56,938] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,946] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:53:56,946] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:53:56,947] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,952] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 00:58:56,953] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 00:58:56,957] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,957] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,957] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,958] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,958] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,958] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,958] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,958] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,959] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 00:58:56,959] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 00:58:56,959] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:56,972] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:03:57,011] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:03:57,017] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,018] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] TRACE [Controller id=0] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,019] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:57,020] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,020] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:03:57,021] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:03:57,021] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:01,088] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@77ec78b9, name=log4j:logger=kafka.controller (kafka.controller)
[2022-05-12 01:09:17,772] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:17,782] INFO [ControllerEventThread controllerId=5] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:17,825] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:17,855] INFO [Controller id=5] 5 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-05-12 01:09:17,867] INFO [Controller id=5] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-05-12 01:09:17,908] DEBUG [Controller id=0] Broker 5 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-12 01:09:17,913] DEBUG [Controller id=3] Broker 5 was elected as controller instead of broker 3 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2022-05-12 01:09:17,970] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:17,974] INFO [Controller id=5] Registering handlers (kafka.controller.KafkaController)
[2022-05-12 01:09:17,983] INFO [Controller id=5] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-05-12 01:09:17,992] INFO [Controller id=5] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-05-12 01:09:17,999] INFO [Controller id=5] Initializing controller context (kafka.controller.KafkaController)
[2022-05-12 01:09:18,007] DEBUG [Controller id=2] Broker 5 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-12 01:09:18,050] INFO [Controller id=5] Initialized broker epochs cache: Map(2 -> 108, 5 -> 107, 4 -> 110, 1 -> 114, 3 -> 106, 0 -> 105) (kafka.controller.KafkaController)
[2022-05-12 01:09:18,079] DEBUG [Controller id=5] Register BrokerModifications handler for Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-12 01:09:18,100] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:18,143] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,156] DEBUG [Controller id=4] Broker 5 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-12 01:09:18,168] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-05-12 01:09:18,186] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 5 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,192] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,202] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,213] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,218] DEBUG [Controller id=1] Broker 5 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-05-12 01:09:18,224] DEBUG [Channel manager on controller 5]: Controller 5 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-05-12 01:09:18,241] INFO [Controller id=5] Currently active brokers in the cluster: Set(2, 5, 4, 1, 3, 0) (kafka.controller.KafkaController)
[2022-05-12 01:09:18,248] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,249] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,249] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,248] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,249] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,249] INFO [RequestSendThread controllerId=5] Starting (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,248] INFO [Controller id=5] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-12 01:09:18,252] INFO [Controller id=5] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2022-05-12 01:09:18,253] INFO [Controller id=5] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-05-12 01:09:18,260] INFO [Controller id=5] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,261] INFO [Controller id=5] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,262] INFO [Controller id=5] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-05-12 01:09:18,263] INFO [Topic Deletion Manager 5] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2022-05-12 01:09:18,264] INFO [Controller id=5] Sending update metadata request (kafka.controller.KafkaController)
[2022-05-12 01:09:18,353] INFO [ReplicaStateMachine controllerId=5] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-05-12 01:09:18,355] INFO [ReplicaStateMachine controllerId=5] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-12 01:09:18,384] INFO [ReplicaStateMachine controllerId=5] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-05-12 01:09:18,385] DEBUG [ReplicaStateMachine controllerId=5] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2022-05-12 01:09:18,386] INFO [PartitionStateMachine controllerId=5] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-05-12 01:09:18,388] INFO [PartitionStateMachine controllerId=5] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-05-12 01:09:18,390] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,396] DEBUG [PartitionStateMachine controllerId=5] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2022-05-12 01:09:18,396] INFO [Controller id=5] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-05-12 01:09:18,398] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,398] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,400] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9096 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,400] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9095 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,401] INFO [RequestSendThread controllerId=5] Controller 5 connected to LAPTOP-S01N1QNU.mshome.net:9097 (id: 5 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-05-12 01:09:18,452] INFO [Controller id=5] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,453] INFO [Controller id=5] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,457] INFO [Controller id=5] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,460] INFO [Controller id=5] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-05-12 01:09:18,462] INFO [Controller id=5] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-05-12 01:09:18,587] INFO [Controller id=5] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-05-12 01:09:18,977] INFO [Controller id=5] New topics: [Set(Sensor)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(Sensor,Some(Z8Wj63_OR9Wtp1cWMaOhsg),Map(Sensor-1 -> ReplicaAssignment(replicas=0,2,3, addingReplicas=, removingReplicas=), Sensor-4 -> ReplicaAssignment(replicas=1,5,4, addingReplicas=, removingReplicas=), Sensor-0 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=), Sensor-5 -> ReplicaAssignment(replicas=2,4,1, addingReplicas=, removingReplicas=), Sensor-2 -> ReplicaAssignment(replicas=5,3,0, addingReplicas=, removingReplicas=), Sensor-3 -> ReplicaAssignment(replicas=4,0,5, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-12 01:09:18,978] INFO [Controller id=5] New partition creation callback for Sensor-1,Sensor-4,Sensor-0,Sensor-5,Sensor-2,Sensor-3 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,605] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:09:23,609] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:09:23,643] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,654] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,655] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,655] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,655] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,656] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,656] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,656] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,657] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,657] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:09:23,657] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:09:23,657] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:10:52,931] INFO [Controller id=5] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(n_pkYZiRRuiGdg_9-qzbDQ),Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=4, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=5, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-05-12 01:10:52,931] INFO [Controller id=5] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,659] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:14:23,659] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:14:23,661] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,665] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:19:23,666] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:19:23,675] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,676] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,676] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,676] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,677] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:19:23,678] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:19:23,678] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,684] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:24:23,684] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:24:23,685] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,685] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,685] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,685] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,685] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:24:23,686] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,689] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:29:23,689] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:29:23,690] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:29:23,691] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,700] INFO [Controller id=5] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-05-12 01:34:23,700] TRACE [Controller id=5] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-05-12 01:34:23,701] DEBUG [Controller id=5] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,701] TRACE [Controller id=5] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,701] DEBUG [Controller id=5] Topics not in preferred replica for broker 5 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,701] TRACE [Controller id=5] Leader imbalance ratio for broker 5 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] DEBUG [Controller id=5] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] TRACE [Controller id=5] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] DEBUG [Controller id=5] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] TRACE [Controller id=5] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] DEBUG [Controller id=5] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] TRACE [Controller id=5] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] DEBUG [Controller id=5] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2022-05-12 01:34:23,702] TRACE [Controller id=5] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
